
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

struct Purchase {
    uint32 id;
    string name;
    uint32 amount;
    uint64 createdAt;
    bool isDone;
    uint32 price;
}

struct SummaryPurchases {
    uint32 comletePurchase;
    uint32 incomletePurchase;
    uint32 totalPrice;
}


interface FunctionInterface {
    function shoppingList() external; 
}

interface IMsig {
   function sendTransaction(address dest, uint128 value, bool bounce, uint8 flags, TvmCell payload  ) external;
}

interface IShopping {
   function addPurchase(string name, uint32 amount) external;
   function updatePurchase(uint32 id, bool done) external;
   function delPurchase(uint32 id) external;
   function getPurchases() external returns (Purchase[] purchases);
   function getStat() external returns (SummaryPurchases);
}

abstract contract AShopping {
   constructor(uint256 pubkey) public {}
}

contract structsForShoppingList {

    uint256 userPubKey;
    TvmCell m_shopListCode;
    address m_address;
    address m_msigAddress;  // User wallet address
    SummaryPurchases m_stat;
    uint32 m_purchaseId;

    uint32 INITIAL_BALANCE =  200000000;  // Initial shoppingList contract balance

    mapping(uint32 => Purchase) m_purchase;
}

